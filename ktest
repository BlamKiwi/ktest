#!/bin/bash

set -o nounset
set -o errexit
set -o errtrace
shopt -s lastpipe

# check for typical shell script errors

export PS4='+${LINENO}+ '

KTESTDIR=$(dirname "$(readlink -f "$0")")

. "$KTESTDIR/lib/util.sh"
. "$KTESTDIR/libktest.sh"

# config files:
[[ -f $KTESTDIR/ktestrc ]]	&& . "$KTESTDIR/ktestrc"
[[ -f /etc/ktestrc ]]		&& . /etc/ktestrc

[[ -f $HOME/.ktestrc ]]		&& . "$HOME/.ktestrc"
[[ -f $HOME/.ktest/root ]]	&& IMG="$HOME/.ktest/root"
[[ -d $HOME/.ktest/tmp ]]	&& VM_TMPDIR="$HOME/.ktest/tmp"

usage()
{
    echo "ktest: Run generic virtual machine tests"
    echo "Usage: ktest cmd [options]"
    ktest_usage_cmds
    echo
    echo "  options:"
    echo "      -x       bash debug statements"
    echo "      -k <dir> kernel to use (default: kernel_source/.ktest)"
    echo "      -w <dir> work directory (default: .ktest"
    echo "      -o <dir> output directory (default: ktest-out)"
    echo
    echo " options for ktest run:"
    echo "      -i <dir> VM root filesystem image"
    echo "      -p <num> hint for test duration (higher is longer, default is 0)"
    echo "      -I       don't automatically stop VM"
    echo "      -S       exit only on test success"
    echo
    ktest_usage_post
}

if [[ $# = 0 ]]; then
    usage
    exit 1
fi

#parse command and shift for rest of arg parsing
CMD="ktest_$1"
shift

while getopts "h${ktest_args}" arg; do
    case $arg in
	h)
	    usage
	    exit 0
	    ;;
    esac
    parse_ktest_arg $arg
done
shift $((OPTIND - 1))

parse_args_post

# check if command is valid
if [[ $(type -t "$CMD") != function ]]; then
    usage
    exit 1
fi

$CMD "$@"
