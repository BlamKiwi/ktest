#!/bin/bash

set -o nounset
set -o errexit
set -o errtrace
shopt -s lastpipe

# check for typical shell script errors

export PS4='+${LINENO}+ '

ktest_dir=$(dirname "$(readlink -f "$0")")

ktest_kernel_binary=""	# dir that has the kernel to run
                        #       set with: -k <path>

. "$ktest_dir/lib/util.sh"
. "$ktest_dir/lib/libktest.sh"

usage()
{
    echo "ktest: Run generic virtual machine tests"
    echo "Usage: ktest cmd [options]"
    ktest_usage_cmds
    echo
    echo "  options:"
    ktest_usage_opts
    echo
    echo " options for ktest run:"
    echo "      -k <dir>    kernel to run"
    ktest_usage_run_opts
    echo
    ktest_usage_post
}

if [[ $# = 0 ]]; then
    usage
    exit 1
fi

#parse command and shift for rest of arg parsing
CMD="ktest_$1"
shift

# check if command is valid
if [[ $(type -t "$CMD") != function ]]; then
    usage
    exit 1
fi

while getopts "k:h${ktest_args}" arg; do
    case $arg in
	k)
	    ktest_kernel_binary=$OPTARG
	    ;;
	h)
	    usage
	    exit 0
	    ;;
    esac
    parse_ktest_arg $arg
done
shift $((OPTIND - 1))

if [[ -z $ktest_kernel_binary ]]; then
    echo "required argument -k missing: kernel to run"
    exit 1
fi

if [[ ! -d $ktest_kernel_binary ]]; then
    echo "kernel $ktest_kernel_binary does not exist"
    exit 1
fi

ktest_kernel_binary=$(readlink -f "$ktest_kernel_binary")

parse_args_post

$CMD "$@"
