#!/bin/bash
#
# Create a VM image suitable for running automated tests
# Output: vm_image

set -o nounset
set -o errexit
set -o errtrace

KTESTDIR=$(dirname "$(readlink -f "$0")")

. "$KTESTDIR/util.sh"

if [[ $(id -u) != 0 ]] ; then
    echo this script must be run as root
    exit 1
fi

checkdep fallocate util-linux
checkdep mkfs.ext4 e2fsprogs
checkdep debootstrap

IMAGE_SIZE="2G"

PACKAGES="kexec-tools,less,psmisc,openssh-server"
PACKAGES+=",make,gcc,g++,gdb,strace,valgrind"
PACKAGES+=",hdparm,xfsprogs,btrfs-tools,mdadm,lvm2,aoetools,vblade"
PACKAGES+=",linux-tools,blktrace,sysstat,fio,dbench,bonnie++"
PACKAGES+=",bc,attr,gawk,acl"
PACKAGES+=",build-essential"

# xfstests:
PACKAGES+=",libtool-bin,xfslibs-dev,libattr1-dev,libaio-dev,libgdbm-dev,libacl1-dev"

EXCLUDE="dmidecode,nano,rsyslog,logrotate,cron,iptables,nfacct"
EXCLUDE+=",debconf-i18n,info,gnupg"

MIRROR=http://ftp.us.debian.org/debian/
ARCH=amd64

SYSTEMD_MASK=(dev-hvc0.device				\
    getty.target					\
    getty-static.service				\
    avahi-daemon.service				\
    crond.service					\
    kdump.service					\
    hdparm.service					\
    cdrom.mount						\
    mdadm-raid.service					\
    lvm2-lvmetad.service				\
    lvm2-monitor.service				\
    lvm2-lvmetad.socket					\
    lvm2-activation-early.service			\
    lvm2-activation.service				\
    aoetools.service					\
    sysstat.service					\
    kexec-load.service					\
    kexec.service					\
    systemd-ask-password-console.path			\
    systemd-ask-password-wall.path			\
    systemd-update-utmp-runlevel.service		\
    systemd-update-utmp.service				\
    systemd-journald.service				\
    systemd-journal-flush.service			\
    systemd-journald-dev-log.socket			\
    systemd-journald.socket				\
    time-sync.target)

usage()
{
    echo "create_vm_image: Create a virtual machine image for ktest"
    echo "Usage: create_vm_image [ -m debian mirror ] [ -a architecture ] filename"
}

while getopts "hm:a:" arg; do
    case $arg in
	h)
	    usage
	    exit 0
	    ;;
	m)
	    MIRROR=$OPTARG
	    ;;
	a)
	    ARCH=$OPTARG
	    ;;
    esac
done
shift $(( OPTIND - 1 ))

if [[ $# = 0 ]]; then
    usage
    exit 1
fi

OUT=$1

MNT=$(mktemp -d)
trap 'echo "WARNING: left a mess in: $MNT"' ERR

fallocate -l "$IMAGE_SIZE" "$OUT"
mkfs.ext4 -F "$OUT"
mkdir -p "$MNT"
mount -n -o loop "$OUT" "$MNT"

debootstrap --arch=$ARCH --include="$PACKAGES" --exclude="$EXCLUDE" sid "$MNT" $MIRROR

cat > "$MNT/etc/network/interfaces" <<-ZZ
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
ZZ

cat > "$MNT/etc/fstab" <<-ZZ
debugfs				/sys/kernel/debug	debugfs		defaults	0	0
configfgs			/sys/kernel/config	configfs	defaults	0	0
ZZ

install -m0755 "$KTESTDIR/rc.local" "$MNT/etc/"

touch "$MNT/etc/resolv.conf"
chmod 644 "$MNT/etc/resolv.conf"

mkdir -p "$MNT/root/"
install -m0644 "$MNT/etc/skel/.bashrc" "$MNT/root/"
install -m0644 "$MNT/etc/skel/.profile" "$MNT/root/"

mkdir -p "$MNT/root/.ssh"
install -m0600 "$KTESTDIR/id_dsa.pub" "$MNT/root/.ssh/authorized_keys"

mkdir -p "$MNT/cdrom"
ln -s /cdrom/modules "$MNT/lib/modules"

mkdir -p "$MNT/var/log/ktest" "$MNT/var/log/core"
chmod 777 "$MNT/var/log/ktest" "$MNT/var/log/core"

# Disable systemd/udev stuff we don't need:
chroot "$MNT" systemctl mask "${SYSTEMD_MASK[@]}"

rm -f "$MNT/lib/udev/rules.d/*persistent*"
rm -f "$MNT/lib/udev/rules.d/*lvm*"
rm -f "$MNT/lib/udev/rules.d/*dm*"
rm -f "$MNT/lib/udev/rules.d/*md-raid*"
rm -f "$MNT/lib/udev/rules.d/*btrfs*"
rm -f "$MNT/lib/udev/rules.d/*hdparm*"

# Unmount everything in the root
awk '{print $2}' /proc/mounts|
    grep "^$MNT"|
    sort -r|
    xargs umount

rmdir "$MNT"

# Trim deleted data from the image (around 75MB)
e2fsck -f "$OUT"
resize2fs -M "$OUT"		# shrinks the file
resize2fs "$OUT" "$IMAGE_SIZE"	# re-grows as sparse
