#!/bin/bash
#
# Test wrapper run inside the VM

set -o nounset
set -o errexit
set -o errtrace

echo "mount logfs"
LOGDIR=/var/log/datera
mkdir -p $LOGDIR
mount -t 9p -o trans=virtio logfs /var/log/datera

echo 1 > /proc/sys/fs/suid_dumpable
echo $LOGDIR/core.%e.PID%p.SIG%s.TIME%t > /proc/sys/kernel/core_pattern
ulimit -c unlimited

for i in `cat /proc/cmdline`; do
    case $i in
	ktest.*)
	    export ktest_${i##ktest.}
	    ;;
    esac
done

require-lib()
{
    . `basename "$1"`
}

require-bin()
{
    return 0
}

require-container()
{
    return 0
}

require-kernel-config()
{
    return 0
}

config-scratch-devs()
{
    return 0
}

config-mem()
{
    return 0
}

config-infiniband()
{
    return 0
}

config-vmcount()
{
    return 0
}

config-timeout()
{
    return 0
}

set +e

(set -e; . rc.test; main)
ret=$?

set -e

echo -n "Saving trace to $LOGDIR/trace.txt... "
cp /sys/kernel/debug/tracing/trace $LOGDIR/trace.txt
echo "done"

echo -n "Saving sysfs to $LOGDIR/sysfs.txt... "
for file in $(find /sys -type f -perm u+r); do
    echo -n "$file: "; cat $file
done > $LOGDIR/sysfs.txt
echo "done"

# Code coverage
gcov_dir=/sys/kernel/debug/gcov
test -d $gcov_dir && cp -dR $gcov_dir $LOGDIR

umount $LOGDIR

if [ $ret = 0 ]; then
    echo "TEST SUCCESS"
else
    echo "TEST FAILED"
fi

exit 0
