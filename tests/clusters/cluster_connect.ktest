#!/usr/bin/python

import sys
import time
import testservices

# define the number of vms to create
VMCOUNT = 4

# return the dependencies required for the test run
if len(sys.argv) > 1 and sys.argv[1] == "deps":
    print "REQUIRE=testservices.py,../../id_dsa"
    print "MEM=256M"
    print "SCRATCH=1G"
    print "VMCOUNT=%d" % VMCOUNT
    sys.exit()

if len(sys.argv) > 1:
    sys.exit("ERROR: No arguments should be passed except 'deps'")

# instantiate the test services instance
test = testservices.TestServices(VMCOUNT)

if test.is_slave():

    # this is what the slave does when the test is run
    peers = test.peers()
    print "I am a slave %s with 1 master [%s] and %d peers:\n%s" % (
        test.ip, test.master, len(peers), str(peers))

else:

    # this is what the master does when the test is run on the vm
    slaves = test.slaves()
    print "I am the master %s with %d slaves:\n%s" % (
        test.ip, len(slaves), str(slaves))

    # ssh to all slaves and get their test results
    retcode = {}
    results = {}
    retcodex = {}
    resultsx = {}
    for slave in slaves:
        retcode[slave] = test.ssh(slave, "/cdrom/rc",repeat=5, wait=5)
        results[slave] = test.results
    print retcode
    print results

    if False not in retcode.values():
        print "TEST SUCCESSFUL"

