#!/bin/bash -e
#
# Create a VM image suitable for running automated tests
# Output: vm_image

KTESTDIR=$(dirname $(readlink -f $0))

. $KTESTDIR/util.sh

checkdep fallocate util-linux
checkdep mkfs.ext4 e2fsprogs
checkdep debootstrap

MNT="$OUT".mnt
SIZE=$((2 * 1024 * 1024 * 1024)) # 2GB

PACKAGES="less,psmisc,openssh-server"
PACKAGES+=",make,gcc,g++,gdb,strace"
PACKAGES+=",hdparm,xfsprogs,btrfs-tools,mdadm,lvm2,aoetools,vblade"
PACKAGES+=",linux-tools,blktrace,sysstat,fio,dbench,bonnie++"

EXCLUDE="dmidecode,nano,rsyslog,logrotate,cron,iptables,nfacct"
EXCLUDE+=",debconf-i18n,info"

MIRROR=http://ftp.us.debian.org/debian/

usage()
{
    echo "create_vm_image: Create a virtual machine image for ktest"
    echo "Usage: create_vm_image [ -m debian mirror ] filename"
}

while getopts "hm:" arg; do
    case $arg in
	h)
	    echo "-m	debian mirror" 
	    ;;
	m)
	    MIRROR=$OPTARG
	    ;;
    esac
done
shift $(( OPTIND - 1 ))

OUT=$1
if [ -z "$OUT" ]; then
    usage
    exit
fi

if [ `id -u` != 0 ] ; then
    echo this script must be run as root
    exit 1
fi

fallocate -l $SIZE $OUT
mkfs.ext4 -F $OUT
mkdir -p $MNT
mount -o loop $OUT $MNT

debootstrap --include="$PACKAGES" --exclude="$EXCLUDE" sid "$MNT" $MIRROR

cat > "$MNT/etc/fstab" <<-ZZ
debugfs				/sys/kernel/debug	debugfs		defaults	0	0
configfgs			/sys/kernel/config	configfs	defaults	0	0
ZZ

cat > "$MNT/etc/network/interfaces" <<-ZZ
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
ZZ

cat > "$MNT/etc/rc.local" <<-ZZ
#!/bin/bash

mount /dev/sr0 /cdrom
PATH=/cdrom:$PATH
cd /cdrom
exec ./rc
ZZ
chmod 755 "$MNT/etc/rc.local"

mkdir -p "$MNT/cdrom"

mkdir -p "$MNT/root/.ssh"
install -m0600 $KTESTDIR/id_dsa.pub "$MNT/root/.ssh/authorized_keys"

umount $MNT/sys/kernel/debug || true
umount $MNT/sys || true
# the above two mounts linger on some installations (for example debian 6)
umount $MNT
rmdir $MNT
